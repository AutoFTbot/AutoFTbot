name: Check Payment Status

on:
  schedule:
    - cron: '*/5 * * * *'  # Run every 5 minutes
  workflow_dispatch:  # Allow manual trigger

jobs:
  check-payment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout AutoFTbot
        uses: actions/checkout@v2

      - name: Checkout OrderKuota-go
        uses: actions/checkout@v2
        with:
          repository: AutoFTbot/OrderKuota-go
          path: OrderKuota-go
          ref: v1.0.1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'

      - name: Add replace directive to go.mod
        run: |
          if ! grep -q 'replace github.com/AutoFTbot/OrderKuota-go' OrderKuota-go/go.mod; then
            echo 'replace github.com/AutoFTbot/OrderKuota-go => ./' >> OrderKuota-go/go.mod
          fi

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Check payment status
        id: check_payment
        env:
          MERCHANT_ID: ${{ secrets.MERCHANT_ID }}
          API_KEY: ${{ secrets.API_KEY }}
          BASE_QR_STRING: ${{ secrets.BASE_QR_STRING }}
        run: |
          cd OrderKuota-go
          if [ -f ../donations.json ]; then
            AMOUNT=$(jq -r '.[0].amount' ../donations.json)
            REFERENCE=$(jq -r '.[0].reference' ../donations.json)
            PAID=$(go run ../donation/check-payment.go "$REFERENCE" "$AMOUNT")
            echo "paid=$PAID" >> $GITHUB_OUTPUT
            if [ "$PAID" = "true" ]; then
              go run ../donation/update-status.go "$REFERENCE" "PAID"
              cd ..
              git add donations.json
              git commit -m "Update donation $REFERENCE to PAID" || true
              git pull --rebase origin main
              git push
            fi
          fi

      - name: Notify via GitHub Issue
        if: steps.check_payment.outputs.paid == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          AMOUNT=$(jq -r '.[0].amount' donations.json)
          REFERENCE=$(jq -r '.[0].reference' donations.json)
          DATE=$(jq -r '.[0].date' donations.json)
          gh issue create --title "Payment Received: Rp $AMOUNT" --body "Thank you for your donation! ðŸŽ‰\n\nAmount: Rp $AMOUNT\nReference: $REFERENCE\nDate: $DATE" 
