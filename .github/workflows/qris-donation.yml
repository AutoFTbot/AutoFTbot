name: QRIS Donation

on:
  schedule:
    - cron: '*/5 * * * *' # setiap 5 menit
  workflow_dispatch:

jobs:
  qris-donation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout AutoFTbot
        uses: actions/checkout@v2

      - name: Checkout OrderKuota-go
        uses: actions/checkout@v2
        with:
          repository: AutoFTbot/OrderKuota-go
          path: OrderKuota-go
          ref: v1.0.1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'

      - name: Add replace directive to go.mod
        run: |
          if ! grep -q 'replace github.com/AutoFTbot/OrderKuota-go' OrderKuota-go/go.mod; then
            echo 'replace github.com/AutoFTbot/OrderKuota-go => ./' >> OrderKuota-go/go.mod
          fi

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Force Generate new QRIS (debug)
        env:
          MERCHANT_ID: ${{ secrets.MERCHANT_ID }}
          API_KEY: ${{ secrets.API_KEY }}
          BASE_QR_STRING: ${{ secrets.BASE_QR_STRING }}
        run: |
          echo "[DEBUG] Remove old donations.json if exists"
          rm -f donations.json
          cd OrderKuota-go
          echo "[DEBUG] Run generate-qris.go"
          go run ../donation/generate-qris.go
          cd ..
          echo "[DEBUG] File donations.json after generate:"
          cat donations.json
          git add donations.json qris.png
          git commit -m "Force generate new QRIS (debug)" || true
          git pull --rebase origin main
          git push

      - name: Check payment status
        id: check_payment
        env:
          MERCHANT_ID: ${{ secrets.MERCHANT_ID }}
          API_KEY: ${{ secrets.API_KEY }}
          BASE_QR_STRING: ${{ secrets.BASE_QR_STRING }}
        run: |
          cd OrderKuota-go
          AMOUNT=$(jq -r '.[0].amount' ../donations.json)
          REFERENCE=$(jq -r '.[0].reference' ../donations.json)
          PAID=$(go run ../donation/check-payment.go "$REFERENCE" "$AMOUNT")
          echo "paid=$PAID" >> $GITHUB_OUTPUT
          echo "[DEBUG] PAID: $PAID"
          if [ "$PAID" = "true" ]; then
            go run ../donation/update-status.go "$REFERENCE" "PAID"
            cd ..
            git add donations.json
            git commit -m "Update donation $REFERENCE to PAID"
            git pull --rebase origin main
            git push
          fi

      - name: Notify via GitHub Issue
        if: steps.check_payment.outputs.paid == 'true'
        run: |
          AMOUNT=$(jq -r '.[0].amount' donations.json)
          REFERENCE=$(jq -r '.[0].reference' donations.json)
          DATE=$(jq -r '.[0].date' donations.json)
          gh issue create --title "Donasi PAID: $AMOUNT" --body "Donasi dengan reference $REFERENCE sudah dibayar pada $DATE."

      # (Opsional) Update README dengan QRIS
      # - name: Update README with QRIS
      #   run: |
      #     QR_STRING=$(jq -r '.[0].qr_string' donations.json)
      #     # Generate QR code image dari QR string di donations.json
      #     # Update README.md dengan gambar QR baru
